{"version":3,"sources":["actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/Control/Timer/Timer.jsx","components/Control/Control.jsx","components/Game/Player/Player.jsx","components/Game/Maze/Cell/Cell.jsx","components/Game/Maze/Target/Target.jsx","components/Game/Maze/Maze.jsx","components/Game/Game.jsx","components/Logo/logo.png","components/Logo/Logo.jsx","App.js","index.js"],"names":["PAUSE","RESUME","FINISH_GAME","MOVE_UP","MOVE_RIGHT","MOVE_DOWN","MOVE_LEFT","RESTART","defaultState","x","y","gameFinished","isRunning","score","maze","generateMaze","getRandomInt","pointPositions","canMove","dir","top","right","bottom","left","min","max","Math","ceil","floor","random","gameReducer","state","action","type","reducers","combineReducers","game","useStyles","makeStyles","youWon","color","fontWeight","marginBottom","timer","Timer","dispatch","useDispatch","classes","useState","second","setSecond","minute","setMinute","counter","setCounter","useEffect","interval","setInterval","secondCounter","minuteCounter","newSecond","String","length","newMinute","clearInterval","className","Typography","Button","onClick","Control","useSelector","console","log","document","addEventListener","handleKeyDown","handleKeyUp","removeEventListener","e","handleKeyInput","key","once","Player","props","style","gridColumn","gridRow","Cell","generateWall","wall","borderTop","borderRight","borderBottom","borderLeft","Target","Maze","map","row","cellInfo","Game","Logo","src","logo","id","alt","fontFamily","Box","fontSize","m","store","createStore","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7d0a524.chunk.js","sourcesContent":["export const PAUSE = \"PAUSE\";\nexport const RESUME = \"RESUME\";\nexport const FINISH_GAME = \"FINISH_GAME\";\nexport const MOVE_UP = \"MOVE_UP\";\nexport const MOVE_RIGHT = \"MOVE_RIGHT\";\nexport const MOVE_DOWN = \"MOVE_DOWN\";\nexport const MOVE_LEFT = \"MOVE_LEFT\";\nexport const RESTART = \"RESTART\";\n\nexport const pause = () => {\n    return { type: PAUSE };\n};\n\nexport const resume = () => {\n    return { type: RESUME };\n};\n\nexport const finishGame = () => {\n    return { type: FINISH_GAME }\n}\n\nexport const moveUp = () => {\n    return { type: MOVE_UP };\n};\n\nexport const moveRight = () => {\n    return { type: MOVE_RIGHT };\n};\n\nexport const moveDown = () => {\n    return { type: MOVE_DOWN };\n};\n\nexport const moveLeft = () => {\n    return { type: MOVE_LEFT };\n};\n\nexport const restart = () => {\n    return { type: RESTART };\n};\n","import generateMaze from \"generate-maze\";\n\nexport const defaultState = () => {\n    // const points = generatePointPositions(10);\n    return {\n        x: 1,\n        y: 1,\n        gameFinished: false,\n        isRunning: true,\n        score: 0,\n        maze: generateMaze(20, 20, true, getRandomInt(0, 10000)),\n        pointPositions: [],\n    };\n};\n\nexport const canMove = (x, y, maze, dir) => {\n    switch(dir){\n        case \"top\":\n            return y > 1 && !maze[y-1][x-1].top;\n        case \"right\":\n            return x < 20 && !maze[y-1][x-1].right;\n        case \"bottom\":\n            return y < 20 && !maze[y-1][x-1].bottom;\n        case \"left\":\n            return x > 1 && !maze[y-1][x-1].left;\n    }\n};\n\nconst getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nconst generatePointPositions = (n) => {\n    const res = new Array(n);\n    let num;\n    for (let i = 0; i < n; i++) {\n        do {\n            num = [getRandomInt(1,20), getRandomInt(1,20)]\n        } while(num !== [1,1]);\n        res.push(num);\n    }\n    return res;\n}\n","import { \n    PAUSE, \n    RESUME, \n    FINISH_GAME, \n    MOVE_UP, \n    MOVE_RIGHT, \n    MOVE_DOWN, \n    MOVE_LEFT,\n    RESTART, \n} from \"../actions\";\nimport { canMove, defaultState } from \"../utils\";\n\nconst gameReducer = (state = defaultState(), action) => {\n    const { x, y, gameFinished, isRunning, score, maze } = state;\n    switch(action.type) {\n        case PAUSE:\n            return { ...state, isRunning: false };\n        case RESUME:\n            return { ...state, isRunning: true };\n        case RESTART:\n            return defaultState();\n        case FINISH_GAME:\n            return { ...state, gameFinished: true, isRunning: false };\n        case MOVE_UP:\n            if (canMove(x,y,maze,\"top\")) \n                return { ...state, y: y-1 };\n            else\n                return state;\n        case MOVE_RIGHT:\n            if (canMove(x,y,maze,\"right\")) \n                return { ...state, x: x+1 };\n            else \n                return state;\n        case MOVE_DOWN:\n            if (canMove(x,y,maze,\"bottom\"))\n                return { ...state, y: y+1 };\n            else \n                return state;\n        case MOVE_LEFT:\n            if (canMove(x,y,maze,\"left\"))\n                return { ...state, x: x-1 };\n            else\n                return state;\n        default: \n            return state;\n    }\n};\n\nexport default gameReducer;","import { combineReducers } from \"redux\";\nimport gameReducer from \"./game-reducer\";\n\nconst reducers = combineReducers({\n    game: gameReducer,\n})\n\nexport default reducers;","import { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { pause, resume, restart } from \"../../../actions\";\nimport \"./Timer.css\";\n\nconst useStyles = makeStyles({\n    youWon: {\n        color: \"green\",\n        fontWeight: \"bold\",\n        marginBottom: \"5px\",\n    },\n    timer: {\n        fontWeight: \"500\",\n    }\n});\n\nconst Timer = ({ gameFinished, isRunning }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const toggleRunning = () => {return(isRunning ? dispatch(pause()) : dispatch(resume()))};\n    const restartGame = () => {\n        dispatch(restart()); \n        setCounter(0);\n        setMinute('00');\n        setSecond('00');\n    };\n    const [second, setSecond] = useState('00');\n    const [minute, setMinute] = useState('00');\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n        let interval;\n    \n        if (!gameFinished && isRunning) {\n          interval = setInterval(() => {\n            const secondCounter = counter % 60;\n            const minuteCounter = Math.floor(counter / 60);\n    \n            const newSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n            const newMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\n    \n            setSecond(newSecond);\n            setMinute(newMinute);\n    \n            setCounter(counter => counter + 1);\n          }, 1000)\n        }\n        return () => clearInterval(interval);\n      }, [gameFinished, isRunning, counter])\n\n    return (\n        <div className=\"timer\">\n            {gameFinished && <Typography className={classes.youWon}>\n                YOU WON!    \n            </Typography>}\n            <Typography className={classes.timer}>\n                Time: {minute}:{second}\n            </Typography>\n            {!gameFinished && <Button color={isRunning ? \"secondary\" : \"primary\"} onClick={toggleRunning}>\n                {isRunning ? \"stop\" : \"start\"}\n            </Button>}\n            <Button onClick={restartGame} >\n                Restart game\n            </Button>\n        </div>\n    )\n};\n\nexport default Timer;\n","import React, { useEffect } from 'react';\nimport Timer from \"./Timer/Timer\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveUp, moveRight, moveDown, moveLeft, finishGame } from \"../../actions\";\nimport \"./Control.css\";\n\nconst Control = () => {\n    const dispatch = useDispatch();\n    const x = useSelector((state) => state.game.x);\n    const y = useSelector((state) => state.game.y);\n    const gameFinished = useSelector((state) => state.game.gameFinished);\n    const isRunning = useSelector((state) => state.game.isRunning);\n    const pointPositions = useSelector((state) => state.game.pointPositions);\n    console.log(pointPositions);\n\n\n    useEffect(() => {\n        if (x===20 && y===20) {\n            dispatch(finishGame());\n        }\n        document.addEventListener('keydown', handleKeyDown);\n        document.addEventListener('keyup', handleKeyUp);\n        return function cleanup() {\n            document.removeEventListener('keydown', handleKeyDown);\n            document.removeEventListener('keyup', handleKeyUp);\n        };\n    });\n    const handleKeyDown = (e) => {\n        handleKeyInput(e.key);\n        document.removeEventListener('keydown', handleKeyDown);\n    };\n    const handleKeyUp = (e) => {\n        document.addEventListener('keydown', handleKeyDown, {once: true});\n    };\n    const handleKeyInput = (key) => {\n        if (!gameFinished && isRunning) switch(key) {\n            case \"ArrowUp\":\n                dispatch(moveUp());\n                break;\n            case \"ArrowRight\":\n                dispatch(moveRight());\n                break;\n            case \"ArrowDown\":\n                dispatch(moveDown());\n                break;\n            case \"ArrowLeft\":\n                dispatch(moveLeft());\n                break;\n        }\n    };\n\n    return (\n        <div className=\"control\">\n            <Timer gameFinished={gameFinished} isRunning={isRunning} />\n        </div>\n    )\n}\n\nexport default Control\n","import React from 'react';\nimport \"./Player.css\";\n\nconst Player = (props) => {\n    const { x, y } = props;\n\n    return (\n        <div \n            className=\"player\" \n            style={{\n                gridColumn: x,\n                gridRow: y,\n            }}     \n        />\n    );\n};\n\nexport default Player;\n","import React from 'react';\nimport \"./Cell.css\";\n\nconst Cell = (props) => {\n    const { top, right, bottom, left, x, y } = props;\n    const generateWall = (wall) => {return(wall ? \"1px solid black\" : \"1px solid #bdbdbd\")};\n\n    return (\n        <div \n            className=\"cell\"\n            style={{\n                borderTop: generateWall(top),\n                borderRight: generateWall(right),\n                borderBottom: generateWall(bottom),\n                borderLeft: generateWall(left),\n            }} \n        />\n    );\n};\n\nexport default Cell;\n","import React from 'react';\nimport \"./Target.css\";\n\nconst Target = () => {\n    return (\n        <div className=\"target\" />\n    );\n};\n\nexport default Target;\n","import React from 'react';\nimport Cell from \"./Cell/Cell\";\nimport Target from \"./Target/Target\";\n\nconst Maze = (props) => {\n    const { maze } = props;\n    return (\n        <>\n            {(maze.map((row) => {\n                return(row.map((cellInfo) => {\n                    return(<Cell {...cellInfo} />);\n                }));\n            }))}\n            <Target />\n        </>\n    );\n};\n\nexport default Maze;\n","import React from 'react';\nimport Player from \"./Player/Player\";\nimport Maze from \"./Maze/Maze\";\nimport \"./Game.css\";\nimport { useSelector } from 'react-redux';\n\nconst Game = () => {\n    let x = useSelector((state) => state.game.x);\n    let y = useSelector((state) => state.game.y);\n    let maze = useSelector((state) => state.game.maze);\n\n    return (\n        <div className=\"game\">\n            <Maze maze={maze} />\n            <Player x={x} y={y} />\n        </div>\n    );\n};\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/logo.4f6bd07d.png\";","import React from 'react';\nimport logo from \"./logo.png\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./Logo.css\";\n\nconst Logo = () => {\n    return (\n        <div className=\"logo\">\n            <img src={logo} id=\"logo\" alt=\"logo\" />\n            <div className=\"logo__text\">\n                <Typography fontFamily=\"Monospace\">\n                    <Box fontFamily=\"Monospace\" fontSize=\"h3.fontSize\" m={1}>\n                        The Maze\n                    </Box>\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Logo;\n","import './App.css';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\n// import Logo from \"./components/Logo/Logo\";\n// import Game from \"./Game\";\n// import Control from \"./Control\";\nimport { Logo, Game, Control } from './components';\n\nconst store = createStore(reducers);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <header className=\"app__header\">\n          <Logo />\n        </header>\n        <div className=\"app__content\">\n          <Game />\n          <Control />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}